# General Config
tag = "example"
concurrency = 4
workdir = "workdir"
log_path = "log.txt"
download_path = "downloads_folder"
use_local_proxy = false # true for local proxy, false for public proxy
split = "validation"
save_path = "dra.jsonl"

# Tool Config
[web_search_tool]
engine = "Google"
fallback_engines = ["DuckDuckGo", "Baidu", "Bing"]
retry_delay = 10
max_retries = 3
lang = "en"
country = "us"
filter_year = 0
num_results = 5
fetch_content = false
max_length = 50000

[deep_researcher_tool]
model_id = "gemini-1.5-pro"
max_depth = 1
max_insights = 10
time_limit_seconds = 30
max_follow_ups = 2

[browser_tool]
model_id = "gemini-1.5-pro"
headless = false
disable_security = true
extra_chromium_args = []
chrome_instance_path = ""
wss_url = ""
cdp_url = ""
use_proxy = false
max_length = 50000
[browser.proxy]
server = "xxxx"
username = "xxxx"
password = "xxxx"

[deep_analyzer_tool]
analyzer_model_ids = ["gemini-1.5-pro"]
summarizer_model_id = "gemini-1.5-pro"

# Agent configs
[agent]
name = "dra"
use_hierarchical_agent = true

[agent.general_agent_config]
model_id = "gemini-1.5-pro"
name = "general_agent"
description = "A general agent that can handle various tasks."
max_steps = 20
template_path = "src/agent/general_agent/prompts/general_agent.yaml"
tools = ["python_interpreter"]
mcp_tools = ["get_weather"]

[agent.planning_agent_config]
model_id = "gemini-1.5-pro"
name = "planning_agent"
description = "A planning agent that can plan the steps to complete the task."
max_steps = 20
template_path = "src/agent/planning_agent/prompts/planning_agent.yaml"
tools = ["planning"]
managed_agents = ["deep_analyzer_agent", "browser_use_agent", "deep_researcher_agent"]
mcp_tools = []

[agent.deep_analyzer_agent_config]
model_id = "gemini-1.5-pro"
name = "deep_analyzer_agent"
description = "Performs systematic, step-by-step analysis..."
max_steps = 3
template_path = "src/agent/deep_analyzer_agent/prompts/deep_analyzer_agent.yaml"
tools = ["deep_analyzer", "python_interpreter"]
mcp_tools = []

[agent.browser_use_agent_config]
model_id = "gemini-1.5-pro"
name = "browser_use_agent"
description = "Searches relevant web pages and interacts with them."
max_steps = 5
template_path = "src/agent/browser_use_agent/prompts/browser_use_agent.yaml"
tools = ["auto_browser_use", "python_interpreter"]
mcp_tools = []

[agent.deep_researcher_agent_config]
model_id = "gemini-1.5-pro"
name = "deep_researcher_agent"
description = "Conducts extensive web searches."
max_steps = 3
template_path = "src/agent/deep_researcher_agent/prompts/deep_researcher_agent.yaml"
tools = ["deep_researcher", "python_interpreter"]
mcp_tools = []

[dataset]
name = "2023_all"
path = "data/GAIA"
